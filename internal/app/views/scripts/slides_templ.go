// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package scripts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func FAnimateSlides() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script type=\"text/javascript\">\n        function AnimateSlides(d, c, si) {\n            let i;\n            let slides = document.getElementsByClassName(c);\n            let slideIndex = si;\n            if (slides) {\n                for (i = 0; i < slides.length; i++) {\n                    slides[i].style.display = \"none\";\n                }\n                slideIndex++;\n                if (slideIndex > slides.length) { slideIndex = 1 }\n                if (slides[slideIndex - 1]) {\n                    slides[slideIndex - 1].style.display = \"flex\";\n                }\n                setTimeout(() => {\n                    AnimateSlides(d, c, slideIndex)\n                }, d); // Change image every 2 seconds\n            }\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
